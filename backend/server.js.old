/**
 * PriceElephant - Shopify App Backend
 * 
 * This is the API server that powers the PriceElephant Shopify theme.
 * It provides price intelligence endpoints for Shopify stores.
 * 
 * Endpoints serve:
 * - Price history data for products
 * - Competitor price comparisons
 * - Price alert management
 * - Business analytics metrics
 * 
 * @author Webelephant
 * @version 1.0.0
 */

const express = require('express');
const cors = require('cors');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(cors());
app.use(express.json());

// Hobo.nl Dedicated Routes
const hoboRoutes = require('./routes/hobo-routes');
app.use('/api/hobo', hoboRoutes);

// Mock Data Service (later vervangen door echte crawler)
const mockPriceService = {
  generatePriceHistory(productId, days = 90) {
    const history = [];
    const basePrice = 299.99;
    let currentPrice = basePrice;
    const today = new Date();

    for (let i = days; i >= 0; i--) {
      const date = new Date(today);
      date.setDate(date.getDate() - i);
      
      // Realistische prijsfluctuaties
      const fluctuation = (Math.random() - 0.5) * 0.05;
      currentPrice = currentPrice * (1 + fluctuation);
      
      // Soms grotere wijzigingen
      if (Math.random() < 0.1) {
        currentPrice = currentPrice * (Math.random() < 0.5 ? 0.92 : 1.08);
      }

      history.push({
        date: date.toISOString().split('T')[0],
        price: Math.round(currentPrice * 100) / 100
      });
    }

    return history;
  },

  generateCompetitorPrices(basePrice = 299.99) {
    const competitors = [
      { name: 'Bol.com', variance: 0.95, logo: '🔵' },
      { name: 'Amazon.nl', variance: 0.92, logo: '📦' },
      { name: 'Coolblue', variance: 1.08, logo: '❄️' },
      { name: 'MediaMarkt', variance: 1.12, logo: '🔴' }
    ];

    return competitors.map(comp => ({
      name: comp.name,
      logo: comp.logo,
      price: Math.round(basePrice * comp.variance * 100) / 100,
      difference: Math.round((comp.variance - 1) * 100),
      inStock: Math.random() > 0.2,
      lastUpdated: new Date().toISOString()
    }));
  }
};

// API Routes
app.get('/apps/priceelephant/products/:handle/history', (req, res) => {
  const { handle } = req.params;
  const days = parseInt(req.query.days) || 90;
  
  const history = mockPriceService.generatePriceHistory(handle, days);
  
  res.json({
    success: true,
    product: handle,
    data: history
  });
});

app.get('/apps/priceelephant/products/:handle/competitors', (req, res) => {
  const { handle } = req.params;
  const basePrice = parseFloat(req.query.price) || 299.99;
  
  const competitors = mockPriceService.generateCompetitorPrices(basePrice);
  
  res.json({
    success: true,
    product: handle,
    yourPrice: basePrice,
    competitors: competitors,
    marketPosition: Math.floor(Math.random() * 4) + 1, // Random positie 1-4
    timestamp: new Date().toISOString()
  });
});

app.post('/apps/priceelephant/alerts', (req, res) => {
  const { productId, email, targetPrice } = req.body;
  
  // Mock alert creation
  res.json({
    success: true,
    message: 'Prijsalert aangemaakt! We sturen je een mail bij prijswijzigingen.',
    alert: {
      id: Math.random().toString(36).substr(2, 9),
      productId,
      email,
      targetPrice,
      createdAt: new Date().toISOString()
    }
  });
});

app.get('/apps/priceelephant/analytics', (req, res) => {
  res.json({
    success: true,
    metrics: {
      totalProducts: 1247,
      avgMarginImprovement: 23.4,
      monthlyRevenue: 47000,
      pricingAccuracy: 94,
      competitorsTracked: 50
    }
  });
});

// Health check
app.get('/health', (req, res) => {
  res.json({ status: 'ok', service: 'PriceElephant API' });
});

app.listen(PORT, () => {
  console.log(`🐘 PriceElephant API running on http://localhost:${PORT}`);
  console.log(`📊 Mock data endpoints active`);
});
