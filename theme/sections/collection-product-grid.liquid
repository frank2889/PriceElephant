{% assign dashboard_heading = section.settings.heading | default: 'BUSINESS PRODUCT INTELLIGENCE' %}
<section class="business-product-intelligence" id="BusinessProductIntelligence">
  <div class="container">
    <header class="intelligence-header">
      <h2 class="intelligence-title">{{ dashboard_heading }}</h2>
      <p class="intelligence-subtitle">{{ section.settings.subheading | default: 'Centraal dashboard voor productbeheer en marktanalyse' }}</p>
      
      <!-- Business Controls -->
      <div class="business-controls">
        <div class="control-group filters">
          <label for="category-filter">CATEGORIE:</label>
          <select id="category-filter" class="business-select">
            <option value="all">Alle producten</option>
            <option value="electronics">Elektronica</option>
            <option value="computers">Computers</option>
            <option value="accessories">Accessoires</option>
          </select>
        </div>
        <div class="control-group sorting">
          <label for="sort-products">SORTEREN:</label>
          <select id="sort-products" class="business-select">
            <option value="margin">Hoogste marge</option>
            <option value="revenue">Meeste omzet</option>
            <option value="alerts">Meeste alerts</option>
            <option value="competition">Concurrentiedruk</option>
          </select>
        </div>
        <div class="control-group actions">
          <button class="control-btn" onclick="bulkUpdatePrices()">BULK PRIJSUPDATE</button>
          <button class="control-btn secondary" onclick="exportProductData()">DATA EXPORT</button>
        </div>
      </div>
    </header>

    <!-- Business Intelligence Grid -->
    <div class="business-intelligence-grid" id="BusinessIntelligenceGrid">
      {% assign products_list = collections[section.settings.collection].products | default: collections.all.products %}
      {% if products_list.size > 0 %}
        {% for product in products_list limit: section.settings.products_per_page %}
          <div class="business-product-card" data-product-id="{{ product.id }}" data-handle="{{ product.handle }}">
            <!-- Product Header -->
            <div class="product-card-header">
              <div class="product-image">
                {% if product.featured_image %}
                  <img src="{{ product.featured_image | img_url: '200x200' }}" alt="{{ product.title }}" loading="lazy">
                {% else %}
                  <div class="image-placeholder">üì¶</div>
                {% endif %}
              </div>
              <div class="product-info">
                <h3 class="product-title">{{ product.title | truncate: 40 }}</h3>
                <p class="product-sku">SKU: {{ product.variants.first.sku | default: 'N/A' }}</p>
                <div class="product-status">
                  {% assign stock_level = product.variants.first.inventory_quantity | default: 0 %}
                  {% if stock_level > 10 %}
                    <span class="status-badge in-stock">IN VOORRAAD</span>
                  {% elsif stock_level > 0 %}
                    <span class="status-badge low-stock">LAAG VOORRAAD</span>
                  {% else %}
                    <span class="status-badge out-of-stock">UITVERKOCHT</span>
                  {% endif %}
                </div>
              </div>
            </div>

            <!-- Business Metrics -->
            <div class="business-metrics">
              <div class="metric-row">
                <div class="metric-item">
                  <span class="metric-label">JOUW PRIJS:</span>
                  <span class="metric-value price">{{ product.price | money }}</span>
                </div>
                <div class="metric-item">
                  <span class="metric-label">CONCURRENT PRIJS:</span>
                  <span class="metric-value competitor-price" id="competitor-{{ product.id }}">Laden...</span>
                </div>
              </div>
              <div class="metric-row">
                <div class="metric-item">
                  <span class="metric-label">MARGE:</span>
                  <span class="metric-value margin positive">{{ section.settings.default_margin | default: 18 }}%</span>
                </div>
                <div class="metric-item">
                  <span class="metric-label">OMZET (30D):</span>
                  <span class="metric-value revenue">‚Ç¨{{ section.settings.default_revenue | default: 2450 | money_without_currency }}</span>
                </div>
              </div>
            </div>

            <!-- Intelligence Indicators -->
            <div class="intelligence-indicators">
              <div class="indicator-item">
                <span class="indicator-icon">üéØ</span>
                <div class="indicator-info">
                  <span class="indicator-label">Marktpositie</span>
                  <span class="indicator-value competitive">#2 van 4</span>
                </div>
              </div>
              <div class="indicator-item">
                <span class="indicator-icon">üìä</span>
                <div class="indicator-info">
                  <span class="indicator-label">Vraag trend</span>
                  <span class="indicator-value increasing">Stijgend</span>
                </div>
              </div>
              <div class="indicator-item">
                <span class="indicator-icon">‚ö°</span>
                <div class="indicator-info">
                  <span class="indicator-label">Laatste update</span>
                  <span class="indicator-value">{{ 'now' | date: '%H:%M' }}</span>
                </div>
              </div>
            </div>

            <!-- Alerts & Recommendations -->
            <div class="business-alerts">
              {% assign alert_count = forloop.index | modulo: 3 %}
              {% if alert_count == 1 %}
                <div class="alert-item urgent">
                  <span class="alert-icon">üö®</span>
                  <span class="alert-text">Concurrent verlaagde prijs met ‚Ç¨{{ forloop.index | times: 10 }}</span>
                </div>
              {% elsif alert_count == 2 %}
                <div class="alert-item opportunity">
                  <span class="alert-icon">üí°</span>
                  <span class="alert-text">Prijs optimalisatie mogelijk: +‚Ç¨{{ forloop.index | times: 5 }}</span>
                </div>
              {% else %}
                <div class="alert-item info">
                  <span class="alert-icon">üìà</span>
                  <span class="alert-text">Stabiele marktpositie</span>
                </div>
              {% endif %}
            </div>

            <!-- Action Buttons -->
            <div class="product-actions">
              <button class="action-btn primary" onclick="openPriceManager('{{ product.handle }}')">
                PRIJS BEHEREN
              </button>
              <button class="action-btn secondary" onclick="viewAnalytics('{{ product.handle }}')">
                ANALYTICS
              </button>
              <button class="action-btn tertiary" onclick="setAlert('{{ product.id }}')">
                ALERT
              </button>
            </div>
          </div>
        {% endfor %}
      {% else %}
        <div class="no-products-message">
          <h3>Geen producten gevonden</h3>
          <p>Er zijn momenteel geen producten in deze collectie.</p>
        </div>
      {% endif %}
    </div>

    <!-- Business Summary Panel -->
    <div class="business-summary">
      <div class="summary-panel">
        <h3 class="summary-title">BUSINESS OVERZICHT</h3>
        <div class="summary-metrics">
          <div class="summary-metric">
            <span class="summary-value">{{ products_list.size | default: 0 }}</span>
            <span class="summary-label">Totaal producten</span>
          </div>
          <div class="summary-metric">
            <span class="summary-value">{{ section.settings.total_alerts | default: 15 }}</span>
            <span class="summary-label">Actieve alerts</span>
          </div>
          <div class="summary-metric">
            <span class="summary-value">‚Ç¨{{ section.settings.total_revenue | default: 125490 | money_without_currency }}</span>
            <span class="summary-label">Maand omzet</span>
          </div>
          <div class="summary-metric">
            <span class="summary-value">{{ section.settings.avg_margin | default: 21.3 }}%</span>
            <span class="summary-label">Gem. marge</span>
          </div>
        </div>
      </div>
    </div>

    <!-- Pagination for Business Use -->
    {% if section.settings.enable_pagination and products_list.size > section.settings.products_per_page %}
      <div class="business-pagination">
        <div class="pagination-info">
          Toont {{ section.settings.products_per_page }} van {{ products_list.size }} producten
        </div>
        <div class="pagination-controls">
          <button class="pagination-btn" onclick="loadPage('prev')">‚Üê VORIGE</button>
          <span class="pagination-current">Pagina 1 van {{ products_list.size | divided_by: section.settings.products_per_page | ceil }}</span>
          <button class="pagination-btn" onclick="loadPage('next')">VOLGENDE ‚Üí</button>
        </div>
      </div>
    {% endif %}
  </div>
</section>

<script>
// Business Product Intelligence Functions
document.addEventListener('DOMContentLoaded', function() {
  initializeBusinessIntelligence();
  loadCompetitorPrices();
  setupBusinessControls();
  startRealTimeUpdates();
});

function initializeBusinessIntelligence() {
  // Setup product card interactions
  document.querySelectorAll('.business-product-card').forEach(card => {
    card.addEventListener('mouseenter', function() {
      this.classList.add('highlighted');
    });
    
    card.addEventListener('mouseleave', function() {
      this.classList.remove('highlighted');
    });
  });
}

function loadCompetitorPrices() {
  // Simulate loading competitor prices
  document.querySelectorAll('[id^="competitor-"]').forEach(element => {
    const productId = element.id.split('-')[1];
    setTimeout(() => {
      const currentPrice = parseFloat(element.closest('.business-product-card')
        .querySelector('.metric-value.price').textContent.replace(/[‚Ç¨,]/g, ''));
      const competitorPrice = currentPrice + (Math.random() * 100 - 50);
      element.textContent = '‚Ç¨' + competitorPrice.toFixed(2);
      
      // Add comparison indicator
      const comparison = competitorPrice < currentPrice ? 'lower' : 'higher';
      element.className = `metric-value competitor-price ${comparison}`;
    }, Math.random() * 2000 + 500);
  });
}

function setupBusinessControls() {
  // Filter functionality
  document.getElementById('category-filter')?.addEventListener('change', function() {
    filterProducts(this.value);
  });
  
  // Sort functionality
  document.getElementById('sort-products')?.addEventListener('change', function() {
    sortProducts(this.value);
  });
}

function filterProducts(category) {
  const cards = document.querySelectorAll('.business-product-card');
  cards.forEach(card => {
    if (category === 'all') {
      card.style.display = 'block';
    } else {
      // Simple category filtering based on product title keywords
      const title = card.querySelector('.product-title').textContent.toLowerCase();
      const shouldShow = title.includes(category) || 
                        (category === 'electronics' && (title.includes('iphone') || title.includes('phone'))) ||
                        (category === 'computers' && (title.includes('macbook') || title.includes('laptop'))) ||
                        (category === 'accessories' && (title.includes('airpods') || title.includes('cable')));
      card.style.display = shouldShow ? 'block' : 'none';
    }
  });
}

function sortProducts(criteria) {
  const grid = document.getElementById('BusinessIntelligenceGrid');
  const cards = Array.from(grid.querySelectorAll('.business-product-card'));
  
  cards.sort((a, b) => {
    switch(criteria) {
      case 'margin':
        const marginA = parseFloat(a.querySelector('.metric-value.margin').textContent);
        const marginB = parseFloat(b.querySelector('.metric-value.margin').textContent);
        return marginB - marginA;
      case 'revenue':
        const revenueA = parseFloat(a.querySelector('.metric-value.revenue').textContent.replace(/[‚Ç¨,]/g, ''));
        const revenueB = parseFloat(b.querySelector('.metric-value.revenue').textContent.replace(/[‚Ç¨,]/g, ''));
        return revenueB - revenueA;
      case 'alerts':
        // Count alerts per product
        const alertsA = a.querySelectorAll('.alert-item.urgent').length;
        const alertsB = b.querySelectorAll('.alert-item.urgent').length;
        return alertsB - alertsA;
      default:
        return 0;
    }
  });
  
  // Re-append sorted cards
  cards.forEach(card => grid.appendChild(card));
}

function startRealTimeUpdates() {
  // Update business metrics every 60 seconds
  setInterval(() => {
    updateBusinessMetrics();
  }, 60000);
}

function updateBusinessMetrics() {
  // Simulate real-time metric updates
  document.querySelectorAll('.metric-value.revenue').forEach(element => {
    const currentValue = parseFloat(element.textContent.replace(/[‚Ç¨,]/g, ''));
    const newValue = currentValue + (Math.random() * 200 - 100);
    element.textContent = '‚Ç¨' + Math.max(0, newValue).toFixed(0);
  });
}

// Business Action Functions
function openPriceManager(productHandle) {
  alert(`Opening price manager for ${productHandle}...`);
  // In production, this would open a modal or navigate to price management interface
}

function viewAnalytics(productHandle) {
  alert(`Loading analytics dashboard for ${productHandle}...`);
  // In production, this would show detailed analytics
}

function setAlert(productId) {
  alert(`Setting up price alert for product ${productId}...`);
  // In production, this would open alert configuration
}

function bulkUpdatePrices() {
  if (confirm('Weet u zeker dat u bulk prijsupdate wilt uitvoeren voor geselecteerde producten?')) {
    alert('Bulk prijsupdate wordt uitgevoerd. Dit kan enkele minuten duren.');
  }
}

function exportProductData() {
  alert('Product data wordt ge√´xporteerd naar CSV. Download start automatisch.');
}

function loadPage(direction) {
  alert(`Loading ${direction} page...`);
  // In production, this would handle pagination
}
</script>

<style>
.business-product-intelligence {
  padding: 3rem 0;
  background: #ffffff;
  color: #000000;
}

.intelligence-header {
  text-align: center;
  margin-bottom: 3rem;
}

.intelligence-title {
  font-size: 2.5rem;
  font-weight: 900;
  text-transform: uppercase;
  letter-spacing: -1px;
  margin-bottom: 1rem;
}

.intelligence-subtitle {
  font-size: 1.1rem;
  color: #666;
  margin-bottom: 2rem;
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
}

.business-controls {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 2rem;
  margin-bottom: 2rem;
  flex-wrap: wrap;
}

.control-group {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.control-group label {
  font-weight: 600;
  font-size: 0.9rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.business-select {
  padding: 0.5rem;
  border: 2px solid #000;
  background: #fff;
  color: #000;
  font-weight: 500;
  min-width: 150px;
}

.control-btn {
  padding: 0.75rem 1.5rem;
  border: 2px solid #000;
  background: #000;
  color: #fff;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.control-btn:hover {
  background: transparent;
  color: #000;
}

.control-btn.secondary {
  background: transparent;
  color: #000;
}

.control-btn.secondary:hover {
  background: #000;
  color: #fff;
}

.business-intelligence-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
  gap: 2rem;
  margin-bottom: 3rem;
}

.business-product-card {
  background: #f8f8f8;
  border: 2px solid #ddd;
  padding: 1.5rem;
  transition: all 0.3s ease;
  position: relative;
}

.business-product-card:hover,
.business-product-card.highlighted {
  border-color: #000;
  background: #fff;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

.product-card-header {
  display: flex;
  gap: 1rem;
  margin-bottom: 1.5rem;
}

.product-image {
  flex-shrink: 0;
  width: 80px;
  height: 80px;
  background: #fff;
  border: 1px solid #ddd;
  display: flex;
  align-items: center;
  justify-content: center;
}

.product-image img {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

.image-placeholder {
  font-size: 2rem;
  color: #ccc;
}

.product-info {
  flex: 1;
}

.product-title {
  font-size: 1.1rem;
  font-weight: 700;
  margin-bottom: 0.5rem;
  line-height: 1.3;
}

.product-sku {
  font-size: 0.9rem;
  color: #666;
  margin-bottom: 0.5rem;
}

.status-badge {
  display: inline-block;
  padding: 0.25rem 0.75rem;
  font-size: 0.8rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  color: #fff;
}

.status-badge.in-stock {
  background: #28a745;
}

.status-badge.low-stock {
  background: #ffc107;
  color: #000;
}

.status-badge.out-of-stock {
  background: #dc3545;
}

.business-metrics {
  margin-bottom: 1.5rem;
}

.metric-row {
  display: flex;
  justify-content: space-between;
  margin-bottom: 0.75rem;
}

.metric-item {
  flex: 1;
  text-align: center;
}

.metric-label {
  display: block;
  font-size: 0.8rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  color: #666;
  margin-bottom: 0.25rem;
}

.metric-value {
  display: block;
  font-size: 1.1rem;
  font-weight: 700;
}

.metric-value.price {
  color: #000;
}

.metric-value.competitor-price.lower {
  color: #dc3545;
}

.metric-value.competitor-price.higher {
  color: #28a745;
}

.metric-value.margin.positive {
  color: #28a745;
}

.metric-value.revenue {
  color: #007bff;
}

.intelligence-indicators {
  margin-bottom: 1.5rem;
  background: #fff;
  border: 1px solid #ddd;
  padding: 1rem;
}

.indicator-item {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 0.75rem;
}

.indicator-item:last-child {
  margin-bottom: 0;
}

.indicator-icon {
  font-size: 1.2rem;
  flex-shrink: 0;
}

.indicator-info {
  flex: 1;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.indicator-label {
  font-weight: 500;
  font-size: 0.9rem;
}

.indicator-value {
  font-weight: 600;
  font-size: 0.9rem;
}

.indicator-value.competitive {
  color: #28a745;
}

.indicator-value.increasing {
  color: #007bff;
}

.business-alerts {
  margin-bottom: 1.5rem;
}

.alert-item {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.75rem;
  margin-bottom: 0.5rem;
  border-left: 4px solid #ddd;
  background: #fff;
  font-size: 0.9rem;
}

.alert-item.urgent {
  border-left-color: #dc3545;
  background: #fff5f5;
}

.alert-item.opportunity {
  border-left-color: #ffc107;
  background: #fffbf0;
}

.alert-item.info {
  border-left-color: #007bff;
  background: #f0f8ff;
}

.alert-icon {
  font-size: 1rem;
  flex-shrink: 0;
}

.alert-text {
  flex: 1;
  font-weight: 500;
}

.product-actions {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 0.5rem;
}

.action-btn {
  padding: 0.75rem 0.5rem;
  border: 2px solid #000;
  background: transparent;
  color: #000;
  font-weight: 600;
  font-size: 0.8rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.action-btn.primary {
  background: #000;
  color: #fff;
}

.action-btn:hover {
  background: #000;
  color: #fff;
}

.action-btn.primary:hover {
  background: #333;
}

.business-summary {
  background: #000;
  color: #fff;
  padding: 2rem;
  margin-bottom: 2rem;
}

.summary-title {
  font-size: 1.3rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 1px;
  margin-bottom: 1.5rem;
  text-align: center;
}

.summary-metrics {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 2rem;
}

.summary-metric {
  text-align: center;
}

.summary-value {
  display: block;
  font-size: 2rem;
  font-weight: 900;
  margin-bottom: 0.5rem;
}

.summary-label {
  display: block;
  font-size: 0.9rem;
  opacity: 0.8;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.business-pagination {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 2rem;
  background: #f8f8f8;
  border: 2px solid #000;
}

.pagination-info {
  font-weight: 500;
}

.pagination-controls {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.pagination-btn {
  padding: 0.75rem 1.5rem;
  border: 2px solid #000;
  background: transparent;
  color: #000;
  font-weight: 600;
  text-transform: uppercase;
  cursor: pointer;
  transition: all 0.2s ease;
}

.pagination-btn:hover {
  background: #000;
  color: #fff;
}

.pagination-current {
  font-weight: 600;
  margin: 0 1rem;
}

.no-products-message {
  grid-column: 1 / -1;
  text-align: center;
  padding: 3rem;
  background: #f8f8f8;
  border: 2px dashed #ddd;
}

.no-products-message h3 {
  font-size: 1.5rem;
  margin-bottom: 1rem;
}

@media (max-width: 768px) {
  .business-intelligence-grid {
    grid-template-columns: 1fr;
  }
  
  .business-controls {
    flex-direction: column;
    gap: 1rem;
  }
  
  .control-group {
    flex-direction: column;
    text-align: center;
  }
  
  .metric-row {
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .product-actions {
    grid-template-columns: 1fr;
  }
  
  .summary-metrics {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .business-pagination {
    flex-direction: column;
    gap: 1rem;
  }
}
</style>

{% schema %}
{
  "name": "Business Product Intelligence",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Dashboard heading",
      "default": "BUSINESS PRODUCT INTELLIGENCE"
    },
    {
      "type": "textarea",
      "id": "subheading",
      "label": "Dashboard description"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Product collection"
    },
    {
      "type": "range",
      "id": "products_per_page",
      "label": "Products per page",
      "min": 6,
      "max": 50,
      "step": 2,
      "default": 12
    },
    {
      "type": "number",
      "id": "default_margin",
      "label": "Default margin percentage",
      "default": 18
    },
    {
      "type": "number",
      "id": "default_revenue",
      "label": "Default monthly revenue per product",
      "default": 2450
    },
    {
      "type": "number",
      "id": "total_alerts",
      "label": "Total active alerts",
      "default": 15
    },
    {
      "type": "number",
      "id": "total_revenue",
      "label": "Total monthly revenue",
      "default": 125490
    },
    {
      "type": "number",
      "id": "avg_margin",
      "label": "Average margin percentage",
      "default": 21.3
    },
    {
      "type": "checkbox",
      "id": "enable_pagination",
      "label": "Enable pagination",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_competitor_prices",
      "label": "Show competitor prices",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_real_time_updates",
      "label": "Enable real-time updates",
      "default": true
    }
  ],
  "blocks": [],
  "presets": [
    {
      "name": "Business Product Intelligence"
    }
  ]
}
{% endschema %}
