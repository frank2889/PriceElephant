{% layout 'theme' %}

<div class="cart-page">
  <div class="container">
    <header class="cart-page__header">
      <h1>{{ 'sections.cart.title' | t }}</h1>
    </header>

    <div class="cart-page__content">
      {% if cart.item_count > 0 %}
        <form action="/cart" method="post" id="cart-form" class="cart-form">
          <div class="cart-items">
            <div class="cart-items__header">
              <div class="cart-items__col cart-items__col--product">{{ 'sections.cart.headings.product' | t }}</div>
              <div class="cart-items__col cart-items__col--quantity">{{ 'sections.cart.headings.quantity' | t }}</div>
              <div class="cart-items__col cart-items__col--total">{{ 'sections.cart.headings.total' | t }}</div>
            </div>
            
            {% for item in cart.items %}
              <div class="cart-item" data-cart-item="{{ forloop.index }}">
                <div class="cart-item__product">
                  {% if item.image %}
                    <img src="{{ item.image | img_url: '120x120' }}" alt="{{ item.image.alt | escape }}" class="cart-item__image">
                  {% endif %}
                  <div class="cart-item__details">
                    <h3 class="cart-item__title">
                      <a href="{{ item.url }}">{{ item.product.title }}</a>
                    </h3>
                    {% unless item.variant.title == 'Default Title' %}
                      <p class="cart-item__variant">{{ item.variant.title }}</p>
                    {% endunless %}
                    <p class="cart-item__price">{{ item.original_price | money }}</p>
                    {% if item.original_price != item.final_price %}
                      <p class="cart-item__discounted-price">{{ item.final_price | money }}</p>
                    {% endif %}
                  </div>
                </div>
                
                <div class="cart-item__quantity">
                  <div class="quantity-selector">
                    <button type="button" class="quantity-selector__button" data-action="decrease" data-line="{{ forloop.index }}">âˆ’</button>
                    <input type="number" name="updates[]" value="{{ item.quantity }}" min="0" class="quantity-selector__input" data-line="{{ forloop.index }}">
                    <button type="button" class="quantity-selector__button" data-action="increase" data-line="{{ forloop.index }}">+</button>
                  </div>
                  <button type="button" class="cart-item__remove" data-line="{{ forloop.index }}">
                    {{ 'sections.cart.remove_title' | t: title: item.title }}
                  </button>
                </div>
                
                <div class="cart-item__total">
                  {{ item.final_line_price | money }}
                </div>
              </div>
            {% endfor %}
          </div>

          <div class="cart-summary">
            <div class="cart-summary__totals">
              <div class="cart-summary__row">
                <span>{{ 'sections.cart.subtotal' | t }}</span>
                <span class="cart-summary__price">{{ cart.total_price | money }}</span>
              </div>
              
              <div class="cart-summary__note">
                <label for="cart-note">{{ 'sections.cart.note' | t }}</label>
                <textarea name="note" id="cart-note" placeholder="Special instructions...">{{ cart.note }}</textarea>
              </div>
              
              <p class="cart-summary__policies">
                {{ 'sections.cart.taxes_and_shipping_policy_at_checkout_html' | t: link: routes.policies_shipping_policy_url }}
              </p>
              
              <button type="submit" name="update" class="btn btn--secondary cart-summary__update">
                {{ 'sections.cart.update' | t }}
              </button>
              
              <button type="submit" name="add" value="" formaction="/cart/add" class="btn btn--primary cart-summary__checkout">
                {{ 'sections.cart.checkout' | t }}
              </button>
            </div>
          </div>
        </form>
      {% else %}
        <div class="cart-empty">
          <h2>{{ 'sections.cart.empty' | t }}</h2>
          <a href="/collections/all" class="btn btn--primary">
            {{ 'general.continue_shopping' | t | default: 'Continue shopping' }}
          </a>
        </div>
      {% endif %}
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const cartForm = document.getElementById('cart-form');
  const quantityButtons = document.querySelectorAll('.quantity-selector__button');
  const quantityInputs = document.querySelectorAll('.quantity-selector__input');
  const removeButtons = document.querySelectorAll('.cart-item__remove');

  // Handle quantity changes
  quantityButtons.forEach(button => {
    button.addEventListener('click', function() {
      const action = this.dataset.action;
      const line = this.dataset.line;
      const input = document.querySelector(`input[data-line="${line}"]`);
      let currentValue = parseInt(input.value);

      if (action === 'increase') {
        input.value = currentValue + 1;
      } else if (action === 'decrease' && currentValue > 0) {
        input.value = currentValue - 1;
      }

      updateCart();
    });
  });

  // Handle quantity input changes
  quantityInputs.forEach(input => {
    input.addEventListener('change', updateCart);
  });

  // Handle remove buttons
  removeButtons.forEach(button => {
    button.addEventListener('click', function() {
      const line = this.dataset.line;
      const input = document.querySelector(`input[data-line="${line}"]`);
      input.value = 0;
      updateCart();
    });
  });

  function updateCart() {
    fetch('/cart/update.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        updates: Array.from(quantityInputs).reduce((acc, input) => {
          acc[input.dataset.line] = parseInt(input.value);
          return acc;
        }, {})
      })
    })
    .then(response => response.json())
    .then(data => {
      // Reload the page to show updated cart
      window.location.reload();
    })
    .catch(error => {
      console.error('Error updating cart:', error);
    });
  }
});
</script>

<style>
  .cart-page {
    padding: 2rem 0;
  }
  
  .cart-page__header {
    margin-bottom: 2rem;
    text-align: center;
  }
  
  .cart-page__header h1 {
    font-size: 2.5rem;
    font-weight: bold;
    color: var(--primary-color, #FF6B00);
  }
  
  .cart-items {
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    margin-bottom: 2rem;
  }
  
  .cart-items__header {
    display: grid;
    grid-template-columns: 2fr 1fr 1fr;
    gap: 1rem;
    padding: 1rem;
    background: #f8f9fa;
    border-radius: 8px 8px 0 0;
    font-weight: 600;
    border-bottom: 1px solid #e9ecef;
  }
  
  .cart-item {
    display: grid;
    grid-template-columns: 2fr 1fr 1fr;
    gap: 1rem;
    padding: 1rem;
    border-bottom: 1px solid #e9ecef;
    align-items: center;
  }
  
  .cart-item:last-child {
    border-bottom: none;
  }
  
  .cart-item__product {
    display: flex;
    gap: 1rem;
    align-items: flex-start;
  }
  
  .cart-item__image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 4px;
  }
  
  .cart-item__details h3 {
    margin: 0 0 0.5rem 0;
    font-size: 1rem;
  }
  
  .cart-item__details a {
    text-decoration: none;
    color: var(--secondary-color, #1C1C1C);
  }
  
  .cart-item__variant {
    margin: 0 0 0.5rem 0;
    font-size: 0.9rem;
    color: #666;
  }
  
  .cart-item__price {
    margin: 0;
    font-weight: 600;
  }
  
  .cart-item__discounted-price {
    margin: 0;
    color: var(--primary-color, #FF6B00);
    font-weight: 600;
  }
  
  .quantity-selector {
    display: flex;
    align-items: center;
    border: 1px solid #ddd;
    border-radius: 4px;
    overflow: hidden;
    width: fit-content;
    margin-bottom: 0.5rem;
  }
  
  .quantity-selector__button {
    width: 32px;
    height: 32px;
    border: none;
    background: #f8f9fa;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .quantity-selector__button:hover {
    background: #e9ecef;
  }
  
  .quantity-selector__input {
    width: 60px;
    height: 32px;
    border: none;
    text-align: center;
    outline: none;
  }
  
  .cart-item__remove {
    background: none;
    border: none;
    color: var(--primary-color, #FF6B00);
    cursor: pointer;
    text-decoration: underline;
    font-size: 0.9rem;
  }
  
  .cart-item__total {
    font-weight: 600;
    text-align: right;
  }
  
  .cart-summary {
    background: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    max-width: 400px;
    margin-left: auto;
  }
  
  .cart-summary__row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 1rem;
    font-size: 1.1rem;
  }
  
  .cart-summary__price {
    font-weight: 600;
  }
  
  .cart-summary__note {
    margin: 1.5rem 0;
  }
  
  .cart-summary__note label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
  }
  
  .cart-summary__note textarea {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    resize: vertical;
    min-height: 80px;
  }
  
  .cart-summary__policies {
    font-size: 0.9rem;
    color: #666;
    margin: 1rem 0;
  }
  
  .cart-summary__update,
  .cart-summary__checkout {
    width: 100%;
    margin-top: 0.5rem;
  }
  
  .cart-empty {
    text-align: center;
    padding: 4rem 0;
  }
  
  .cart-empty h2 {
    margin-bottom: 1rem;
    color: #666;
  }
  
  .btn {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 4px;
    text-decoration: none;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    text-align: center;
  }
  
  .btn--primary {
    background-color: var(--primary-color, #FF6B00);
    color: white;
  }
  
  .btn--secondary {
    background-color: #f8f9fa;
    color: var(--secondary-color, #1C1C1C);
    border: 1px solid #ddd;
  }
  
  .btn:hover {
    opacity: 0.9;
    transform: translateY(-1px);
  }
  
  @media (max-width: 768px) {
    .cart-items__header,
    .cart-item {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    
    .cart-items__header {
      display: none;
    }
    
    .cart-item__product {
      order: 1;
    }
    
    .cart-item__quantity {
      order: 2;
    }
    
    .cart-item__total {
      order: 3;
      text-align: left;
    }
  }
</style>